//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FireLow
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FLEntities : DbContext
    {
        public FLEntities()
            : base("name=FLEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CHECKLIST> CHECKLISTs { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMERs { get; set; }
        public virtual DbSet<PRODUCT> PRODUCTs { get; set; }
        public virtual DbSet<USER> USERS { get; set; }
    
        public virtual ObjectResult<sp_carereport_Result> sp_carereport(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_carereport_Result>("sp_carereport", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_cmanoreport_Result> sp_cmanoreport(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_cmanoreport_Result>("sp_cmanoreport", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_cmemreport_Result> sp_cmemreport(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_cmemreport_Result>("sp_cmemreport", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_cpressreport_Result> sp_cpressreport(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_cpressreport_Result>("sp_cpressreport", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_datediff_Result> sp_datediff()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_datediff_Result>("sp_datediff");
        }
    
        public virtual ObjectResult<sp_datemonth_Result> sp_datemonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_datemonth_Result>("sp_datemonth");
        }
    
        public virtual ObjectResult<sp_datenow_Result> sp_datenow()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_datenow_Result>("sp_datenow");
        }
    
        public virtual ObjectResult<sp_dateyear_Result> sp_dateyear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_dateyear_Result>("sp_dateyear");
        }
    
        public virtual ObjectResult<sp_fillreport_Result> sp_fillreport(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_fillreport_Result>("sp_fillreport", fromdateParameter, todateParameter);
        }
    }
}
